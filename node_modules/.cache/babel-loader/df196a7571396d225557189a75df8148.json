{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\web-dev-projects-main\\\\personal-portfolio\\\\src\\\\components\\\\Newsletter.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { Col, Row, Alert } from \"react-bootstrap\";\nimport emailjs from 'emailjs-com';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Newsletter = _ref => {\n  _s();\n\n  let {\n    status,\n    message,\n    onValidated\n  } = _ref;\n  const [email, setEmail] = useState('');\n  const [buttonText, setButtonText] = useState('Subscribe');\n  const [statusState, setStatusState] = useState({}); // Ajout du hook useState pour status\n\n  useEffect(() => {\n    if (status === 'success') clearFields();\n  }, [status]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (email && email.indexOf(\"@\") > -1) {\n      setButtonText(\"Sending...\"); // Utilisation d'EmailJS pour envoyer l'email\n\n      const emailDetails = {\n        email: email,\n        // L'email que l'utilisateur a saisi\n        message: 'Nouvelle souscription à la newsletter!' // Message qui accompagne l'email\n\n      };\n      emailjs.send('service_28hrsuj', // Remplace par ton propre service ID d'EmailJS\n      'template_irqveal', // Remplace par ton template ID d'EmailJS\n      emailDetails, // Les données du formulaire\n      'Sdgl5ao2jkoAOC2XY' // Remplace par ton propre User ID d'EmailJS\n      ).then(result => {\n        console.log(result.text);\n        setStatusState({\n          success: true,\n          message: 'Successfully subscribed!'\n        });\n        setButtonText(\"Subscribe\");\n        setEmail('');\n      }, error => {\n        console.log(error.text);\n        setStatusState({\n          success: false,\n          message: 'Something went wrong, please try again later.'\n        });\n        setButtonText(\"Subscribe\");\n      });\n    }\n  };\n\n  const clearFields = () => {\n    setEmail('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Col, {\n    lg: 12,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"newsletter-bx wow slideInUp\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          lg: 12,\n          md: 6,\n          xl: 5,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Subscribe to our Newsletter\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 44\n            }, this), \" & Never miss latest updates\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), status === 'sending' && /*#__PURE__*/_jsxDEV(Alert, {\n            children: \"Sending...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 38\n          }, this), status === 'error' && /*#__PURE__*/_jsxDEV(Alert, {\n            variant: \"danger\",\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 36\n          }, this), status === 'success' && /*#__PURE__*/_jsxDEV(Alert, {\n            variant: \"success\",\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 38\n          }, this), statusState.message && /*#__PURE__*/_jsxDEV(Alert, {\n            variant: statusState.success ? \"success\" : \"danger\",\n            children: statusState.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          xl: 7,\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"new-email-bx\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                value: email,\n                type: \"email\",\n                onChange: e => setEmail(e.target.value),\n                placeholder: \"Email Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: buttonText\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 39\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Newsletter, \"8l2OvyKRob3l1VHerWV5pdfG/Oo=\");\n\n_c = Newsletter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Newsletter\");","map":{"version":3,"names":["useState","useEffect","Col","Row","Alert","emailjs","Newsletter","status","message","onValidated","email","setEmail","buttonText","setButtonText","statusState","setStatusState","clearFields","handleSubmit","e","preventDefault","indexOf","emailDetails","send","then","result","console","log","text","success","error","target","value"],"sources":["C:/Users/pc/Desktop/web-dev-projects-main/personal-portfolio/src/components/Newsletter.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Col, Row, Alert } from \"react-bootstrap\";\nimport emailjs from 'emailjs-com';\n\nexport const Newsletter = ({ status, message, onValidated }) => {\n  const [email, setEmail] = useState('');\n  const [buttonText, setButtonText] = useState('Subscribe');\n  const [statusState, setStatusState] = useState({});  // Ajout du hook useState pour status\n\n  useEffect(() => {\n    if (status === 'success') clearFields();\n  }, [status]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (email && email.indexOf(\"@\") > -1) {\n      setButtonText(\"Sending...\");\n      \n      // Utilisation d'EmailJS pour envoyer l'email\n      const emailDetails = {\n        email: email,  // L'email que l'utilisateur a saisi\n        message: 'Nouvelle souscription à la newsletter!'  // Message qui accompagne l'email\n      };\n\n      emailjs.send(\n        'service_28hrsuj',   // Remplace par ton propre service ID d'EmailJS\n        'template_irqveal',  // Remplace par ton template ID d'EmailJS\n        emailDetails,         // Les données du formulaire\n        'Sdgl5ao2jkoAOC2XY'   // Remplace par ton propre User ID d'EmailJS\n      ).then((result) => {\n        console.log(result.text);\n        setStatusState({ success: true, message: 'Successfully subscribed!' });\n        setButtonText(\"Subscribe\");\n        setEmail('');\n      }, (error) => {\n        console.log(error.text);\n        setStatusState({ success: false, message: 'Something went wrong, please try again later.' });\n        setButtonText(\"Subscribe\");\n      });\n    }\n  };\n\n  const clearFields = () => {\n    setEmail('');\n  };\n\n  return (\n    <Col lg={12}>\n      <div className=\"newsletter-bx wow slideInUp\">\n        <Row>\n          <Col lg={12} md={6} xl={5}>\n            <h3>Subscribe to our Newsletter<br></br> & Never miss latest updates</h3>\n            {status === 'sending' && <Alert>Sending...</Alert>}\n            {status === 'error' && <Alert variant=\"danger\">{message}</Alert>}\n            {status === 'success' && <Alert variant=\"success\">{message}</Alert>}\n            {statusState.message && <Alert variant={statusState.success ? \"success\" : \"danger\"}>{statusState.message}</Alert>}\n          </Col>\n          <Col md={6} xl={7}>\n            <form onSubmit={handleSubmit}>\n              <div className=\"new-email-bx\">\n                <input \n                  value={email} \n                  type=\"email\" \n                  onChange={(e) => setEmail(e.target.value)} \n                  placeholder=\"Email Address\" \n                />\n                <button type=\"submit\"><span>{buttonText}</span></button>\n              </div>\n            </form>\n          </Col>\n        </Row>\n      </div>\n    </Col>\n  );\n};\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,KAAnB,QAAgC,iBAAhC;AACA,OAAOC,OAAP,MAAoB,aAApB;;AAEA,OAAO,MAAMC,UAAU,GAAG,QAAsC;EAAA;;EAAA,IAArC;IAAEC,MAAF;IAAUC,OAAV;IAAmBC;EAAnB,CAAqC;EAC9D,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACY,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,WAAD,CAA5C;EACA,MAAM,CAACc,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC,EAAD,CAA9C,CAH8D,CAGT;;EAErDC,SAAS,CAAC,MAAM;IACd,IAAIM,MAAM,KAAK,SAAf,EAA0BS,WAAW;EACtC,CAFQ,EAEN,CAACT,MAAD,CAFM,CAAT;;EAIA,MAAMU,YAAY,GAAIC,CAAD,IAAO;IAC1BA,CAAC,CAACC,cAAF;;IACA,IAAIT,KAAK,IAAIA,KAAK,CAACU,OAAN,CAAc,GAAd,IAAqB,CAAC,CAAnC,EAAsC;MACpCP,aAAa,CAAC,YAAD,CAAb,CADoC,CAGpC;;MACA,MAAMQ,YAAY,GAAG;QACnBX,KAAK,EAAEA,KADY;QACJ;QACfF,OAAO,EAAE,wCAFU,CAEgC;;MAFhC,CAArB;MAKAH,OAAO,CAACiB,IAAR,CACE,iBADF,EACuB;MACrB,kBAFF,EAEuB;MACrBD,YAHF,EAGwB;MACtB,mBAJF,CAIwB;MAJxB,EAKEE,IALF,CAKQC,MAAD,IAAY;QACjBC,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,IAAnB;QACAZ,cAAc,CAAC;UAAEa,OAAO,EAAE,IAAX;UAAiBpB,OAAO,EAAE;QAA1B,CAAD,CAAd;QACAK,aAAa,CAAC,WAAD,CAAb;QACAF,QAAQ,CAAC,EAAD,CAAR;MACD,CAVD,EAUIkB,KAAD,IAAW;QACZJ,OAAO,CAACC,GAAR,CAAYG,KAAK,CAACF,IAAlB;QACAZ,cAAc,CAAC;UAAEa,OAAO,EAAE,KAAX;UAAkBpB,OAAO,EAAE;QAA3B,CAAD,CAAd;QACAK,aAAa,CAAC,WAAD,CAAb;MACD,CAdD;IAeD;EACF,CA3BD;;EA6BA,MAAMG,WAAW,GAAG,MAAM;IACxBL,QAAQ,CAAC,EAAD,CAAR;EACD,CAFD;;EAIA,oBACE,QAAC,GAAD;IAAK,EAAE,EAAE,EAAT;IAAA,uBACE;MAAK,SAAS,EAAC,6BAAf;MAAA,uBACE,QAAC,GAAD;QAAA,wBACE,QAAC,GAAD;UAAK,EAAE,EAAE,EAAT;UAAa,EAAE,EAAE,CAAjB;UAAoB,EAAE,EAAE,CAAxB;UAAA,wBACE;YAAA,uDAA+B;cAAA;cAAA;cAAA;YAAA,QAA/B;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,EAEGJ,MAAM,KAAK,SAAX,iBAAwB,QAAC,KAAD;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAF3B,EAGGA,MAAM,KAAK,OAAX,iBAAsB,QAAC,KAAD;YAAO,OAAO,EAAC,QAAf;YAAA,UAAyBC;UAAzB;YAAA;YAAA;YAAA;UAAA,QAHzB,EAIGD,MAAM,KAAK,SAAX,iBAAwB,QAAC,KAAD;YAAO,OAAO,EAAC,SAAf;YAAA,UAA0BC;UAA1B;YAAA;YAAA;YAAA;UAAA,QAJ3B,EAKGM,WAAW,CAACN,OAAZ,iBAAuB,QAAC,KAAD;YAAO,OAAO,EAAEM,WAAW,CAACc,OAAZ,GAAsB,SAAtB,GAAkC,QAAlD;YAAA,UAA6Dd,WAAW,CAACN;UAAzE;YAAA;YAAA;YAAA;UAAA,QAL1B;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAQE,QAAC,GAAD;UAAK,EAAE,EAAE,CAAT;UAAY,EAAE,EAAE,CAAhB;UAAA,uBACE;YAAM,QAAQ,EAAES,YAAhB;YAAA,uBACE;cAAK,SAAS,EAAC,cAAf;cAAA,wBACE;gBACE,KAAK,EAAEP,KADT;gBAEE,IAAI,EAAC,OAFP;gBAGE,QAAQ,EAAGQ,CAAD,IAAOP,QAAQ,CAACO,CAAC,CAACY,MAAF,CAASC,KAAV,CAH3B;gBAIE,WAAW,EAAC;cAJd;gBAAA;gBAAA;gBAAA;cAAA,QADF,eAOE;gBAAQ,IAAI,EAAC,QAAb;gBAAA,uBAAsB;kBAAA,UAAOnB;gBAAP;kBAAA;kBAAA;kBAAA;gBAAA;cAAtB;gBAAA;gBAAA;gBAAA;cAAA,QAPF;YAAA;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QARF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AA4BD,CAtEM;;GAAMN,U;;KAAAA,U"},"metadata":{},"sourceType":"module"}