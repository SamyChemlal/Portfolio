[{"C:\\Users\\pc\\Desktop\\personal-portfolio\\src\\index.js":"1","C:\\Users\\pc\\Desktop\\personal-portfolio\\src\\reportWebVitals.js":"2","C:\\Users\\pc\\Desktop\\personal-portfolio\\src\\App.js":"3","C:\\Users\\pc\\Desktop\\personal-portfolio\\src\\components\\Banner.js":"4","C:\\Users\\pc\\Desktop\\personal-portfolio\\src\\components\\NavBar.js":"5","C:\\Users\\pc\\Desktop\\personal-portfolio\\src\\components\\Skills.js":"6","C:\\Users\\pc\\Desktop\\personal-portfolio\\src\\components\\Projects.js":"7","C:\\Users\\pc\\Desktop\\personal-portfolio\\src\\components\\Contact.js":"8","C:\\Users\\pc\\Desktop\\personal-portfolio\\src\\components\\Footer.js":"9","C:\\Users\\pc\\Desktop\\personal-portfolio\\src\\components\\ProjectCard.js":"10","C:\\Users\\pc\\Desktop\\personal-portfolio\\src\\components\\MailchimpForm.js":"11","C:\\Users\\pc\\Desktop\\personal-portfolio\\src\\components\\Newsletter.js":"12"},{"size":535,"mtime":1694450212000,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1694450212000,"results":"15","hashOfConfig":"14"},{"size":579,"mtime":1745762152072,"results":"16","hashOfConfig":"14"},{"size":3341,"mtime":1745765440752,"results":"17","hashOfConfig":"14"},{"size":2845,"mtime":1745758130563,"results":"18","hashOfConfig":"14"},{"size":2281,"mtime":1745759119752,"results":"19","hashOfConfig":"14"},{"size":4461,"mtime":1745764003416,"results":"20","hashOfConfig":"14"},{"size":3763,"mtime":1745760033911,"results":"21","hashOfConfig":"14"},{"size":1372,"mtime":1745758277046,"results":"22","hashOfConfig":"14"},{"size":359,"mtime":1694450212000,"results":"23","hashOfConfig":"14"},{"size":591,"mtime":1694450212000,"results":"24","hashOfConfig":"14"},{"size":3235,"mtime":1745761854151,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"djmu26",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},"C:\\Users\\pc\\Desktop\\personal-portfolio\\src\\index.js",[],[],"C:\\Users\\pc\\Desktop\\personal-portfolio\\src\\reportWebVitals.js",[],[],"C:\\Users\\pc\\Desktop\\personal-portfolio\\src\\App.js",["67"],[],"import logo from './logo.svg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { NavBar } from \"./components/NavBar\";\nimport { Banner } from \"./components/Banner\";\nimport { Skills } from \"./components/Skills\";\nimport { Projects } from \"./components/Projects\";\nimport { Contact } from \"./components/Contact\";\nimport { Footer } from \"./components/Footer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar />\n      <Banner />\n      <Skills />\n      <Projects />\n      <Contact />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\pc\\Desktop\\personal-portfolio\\src\\components\\Banner.js",["68","69"],[],"import { useState, useEffect } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport headerImg from \"../assets/img/avatar.png\";\nimport { ArrowRightCircle } from 'react-bootstrap-icons';\nimport 'animate.css';\nimport TrackVisibility from 'react-on-screen';\n\nexport const Banner = () => {\n  const [loopNum, setLoopNum] = useState(0);\n  const [isDeleting, setIsDeleting] = useState(false);\n  const [text, setText] = useState('');\n  const [delta, setDelta] = useState(300 - Math.random() * 100);\n  const [index, setIndex] = useState(1);\n  const toRotate = [ \"Web Developer\", \"Full-stack Developer\", \"Web Designer\"];\n  const period = 2000;\n\n  useEffect(() => {\n    let ticker = setInterval(() => {\n      tick();\n    }, delta);\n\n    return () => { clearInterval(ticker) };\n  }, [text])\n  const scrollToContact = () => {\n    const contactSection = document.getElementById('connect');\n    if (contactSection) {\n      contactSection.scrollIntoView({ behavior: 'smooth' });\n    }\n  };\n  \n  const tick = () => {\n    let i = loopNum % toRotate.length;\n    let fullText = toRotate[i];\n    let updatedText = isDeleting ? fullText.substring(0, text.length - 1) : fullText.substring(0, text.length + 1);\n\n    setText(updatedText);\n\n    if (isDeleting) {\n      setDelta(prevDelta => prevDelta / 2);\n    }\n\n    if (!isDeleting && updatedText === fullText) {\n      setIsDeleting(true);\n      setIndex(prevIndex => prevIndex - 1);\n      setDelta(period);\n    } else if (isDeleting && updatedText === '') {\n      setIsDeleting(false);\n      setLoopNum(loopNum + 1);\n      setIndex(1);\n      setDelta(500);\n    } else {\n      setIndex(prevIndex => prevIndex + 1);\n    }\n  }\n\n  return (\n    <section className=\"banner\" id=\"home\">\n      <Container>\n        <Row className=\"aligh-items-center\">\n          <Col xs={12} md={6} xl={7}>\n            <TrackVisibility>\n              {({ isVisible }) =>\n              <div className={isVisible ? \"animate__animated animate__fadeIn\" : \"\"}>\n                <span className=\"tagline\">Welcome to my Portfolio</span>\n                <h1>{`Hi! I'm Samy`} <span className=\"txt-rotate\" dataPeriod=\"1000\" data-rotate='[ \"Web Developer\", \"Web Designer\", \"Full-stack Developer\" ]'><span className=\"wrap\">{text}</span></span></h1>\n                  <p>Network & Telecommunications Engineer, graduated from École Sup Galilée – Sorbonne Paris North University.\nPassionate about web and software development, with numerous full-stack projects to my credit.\nFormer intern at Alten, I am now launching my freelance career!</p>\n<button onClick={() => scrollToContact()}>Let’s Connect <ArrowRightCircle size={25} /></button>\n                    {/* Bouton de téléchargement du CV */}\n                <a href=\"/resume.pdf\" download>\n                  <button className=\"download-btn\">\n                    Download Resume\n                  </button>\n                </a>\n              </div>}\n            </TrackVisibility>\n          </Col>\n          <Col xs={12} md={6} xl={5}>\n            <TrackVisibility>\n              {({ isVisible }) =>\n                <div className={isVisible ? \"animate__animated animate__zoomIn\" : \"\"}>\n                  <img src={headerImg} alt=\"Header Img\"/>\n                </div>}\n            </TrackVisibility>\n          </Col>\n        </Row>\n      </Container>\n    </section>\n  )\n}\n","C:\\Users\\pc\\Desktop\\personal-portfolio\\src\\components\\NavBar.js",[],[],"C:\\Users\\pc\\Desktop\\personal-portfolio\\src\\components\\Skills.js",["70","71","72","73","74","75","76"],[],"import meter1 from \"../assets/img/meter1.svg\";\nimport meter2 from \"../assets/img/meter2.svg\";\nimport meter3 from \"../assets/img/meter3.svg\";\nimport Carousel from 'react-multi-carousel';\nimport 'react-multi-carousel/lib/styles.css';\nimport arrow1 from \"../assets/img/arrow1.svg\";\nimport arrow2 from \"../assets/img/arrow2.svg\";\nimport colorSharp from \"../assets/img/color-sharp.png\"\n\nexport const Skills = () => {\n  const responsive = {\n    superLargeDesktop: {\n      // the naming can be any, depends on you.\n      breakpoint: { max: 4000, min: 3000 },\n      items: 5\n    },\n    desktop: {\n      breakpoint: { max: 3000, min: 1024 },\n      items: 3\n    },\n    tablet: {\n      breakpoint: { max: 1024, min: 464 },\n      items: 2\n    },\n    mobile: {\n      breakpoint: { max: 464, min: 0 },\n      items: 1\n    }\n  };\n\n  return (\n    <section className=\"skill\" id=\"skills\">\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-12\">\n                    <div className=\"skill-bx wow zoomIn\">\n                        <h2>Skills</h2>\n                        <p>From web development to software engineering and creative design, I bring ideas to life with precision and passion.<br />Constantly evolving, constantly delivering excellence.</p>\n                        <Carousel responsive={responsive} infinite={true} className=\"owl-carousel owl-theme skill-slider\">\n                            <div className=\"item\">\n                                <img src={meter1} alt=\"Image\" />\n                                <h5>Web Development</h5>\n                            </div>\n                          \n                            <div className=\"item\">\n                                <img src={meter3} alt=\"Image\" />\n                                <h5>Logo Design</h5>\n                            </div>\n                            <div className=\"item\">\n                                <img src={meter1} alt=\"Image\" />\n                                <h5>Software Development</h5>\n                            </div>\n                        </Carousel>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <img className=\"background-image-left\" src={colorSharp} alt=\"Image\" />\n    </section>\n  )\n}\n","C:\\Users\\pc\\Desktop\\personal-portfolio\\src\\components\\Projects.js",[],[],"C:\\Users\\pc\\Desktop\\personal-portfolio\\src\\components\\Contact.js",[],[],"C:\\Users\\pc\\Desktop\\personal-portfolio\\src\\components\\Footer.js",[],[],"C:\\Users\\pc\\Desktop\\personal-portfolio\\src\\components\\ProjectCard.js",["77"],[],"import { Col } from \"react-bootstrap\";\n\nexport const ProjectCard = ({ title, description, imgUrl }) => {\n  return (\n    <Col size={12} sm={6} md={4}>\n      <div className=\"proj-imgbx\">\n        <img src={imgUrl} />\n        <div className=\"proj-txtx\">\n          <h4>{title}</h4>\n          <span>{description}</span>\n        </div>\n      </div>\n    </Col>\n  )\n}\n","C:\\Users\\pc\\Desktop\\personal-portfolio\\src\\components\\MailchimpForm.js",[],[],"C:\\Users\\pc\\Desktop\\personal-portfolio\\src\\components\\Newsletter.js",["78"],[],"import { useState, useEffect } from \"react\";\nimport { Col, Row, Alert } from \"react-bootstrap\";\nimport emailjs from 'emailjs-com';\n\nexport const Newsletter = ({ status, message, onValidated }) => {\n  const [email, setEmail] = useState('');\n  const [buttonText, setButtonText] = useState('Subscribe');\n  const [statusState, setStatusState] = useState({});  // Ajout du hook useState pour status\n\n  useEffect(() => {\n    if (status === 'success') clearFields();\n  }, [status]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (email && email.indexOf(\"@\") > -1) {\n      setButtonText(\"Sending...\");\n      \n      // Utilisation d'EmailJS pour envoyer l'email de confirmation à l'utilisateur\n      const emailDetails = {\n        email: email,  // L'email que l'utilisateur a saisi\n        message: 'Nouvelle souscription à la newsletter!'  // Message qui accompagne l'email de confirmation\n      };\n\n      emailjs.send(\n        'service_28hrsuj',   // Remplace par ton propre service ID d'EmailJS\n        'template_irqveal',  // Remplace par ton template ID d'EmailJS\n        emailDetails,         // Les données du formulaire\n        'Sdgl5ao2jkoAOC2XY'   // Remplace par ton propre User ID d'EmailJS\n      ).then((result) => {\n        console.log(result.text);\n        setStatusState({ success: true, message: 'Successfully subscribed!' });\n        setButtonText(\"Subscribe\");\n        setEmail('');\n      }, (error) => {\n        console.log(error.text);\n        setStatusState({ success: false, message: 'Something went wrong, please try again later.' });\n        setButtonText(\"Subscribe\");\n      });\n\n      // Utilisation d'EmailJS pour envoyer un email de notification à l'administrateur\n      const adminEmailDetails = {\n        to_email: 'your-email@example.com',  // Remplace par ton propre email (adresse de l'administrateur)\n        subscriber_email: email,  // Email de l'utilisateur qui s'est abonné\n        message: 'Un nouvel utilisateur s\\'est abonné à la newsletter'  // Message qui accompagne l'email à l'administrateur\n      };\n\n   \n    }\n  };\n\n  const clearFields = () => {\n    setEmail('');\n  };\n\n  return (\n    <Col lg={12}>\n      <div className=\"newsletter-bx wow slideInUp\">\n        <Row>\n          <Col lg={12} md={6} xl={5}>\n            <h3>Subscribe to our Newsletter<br></br> & Never miss latest updates</h3>\n            {status === 'sending' && <Alert>Sending...</Alert>}\n            {status === 'error' && <Alert variant=\"danger\">{message}</Alert>}\n            {status === 'success' && <Alert variant=\"success\">{message}</Alert>}\n            {statusState.message && <Alert variant={statusState.success ? \"success\" : \"danger\"}>{statusState.message}</Alert>}\n          </Col>\n          <Col md={6} xl={7}>\n            <form onSubmit={handleSubmit}>\n              <div className=\"new-email-bx\">\n                <input \n                  value={email} \n                  type=\"email\" \n                  onChange={(e) => setEmail(e.target.value)} \n                  placeholder=\"Email Address\" \n                />\n                <button type=\"submit\"><span>{buttonText}</span></button>\n              </div>\n            </form>\n          </Col>\n        </Row>\n      </div>\n    </Col>\n  );\n};\n",{"ruleId":"79","severity":1,"message":"80","line":1,"column":8,"nodeType":"81","messageId":"82","endLine":1,"endColumn":12},{"ruleId":"79","severity":1,"message":"83","line":13,"column":10,"nodeType":"81","messageId":"82","endLine":13,"endColumn":15},{"ruleId":"84","severity":1,"message":"85","line":23,"column":6,"nodeType":"86","endLine":23,"endColumn":12,"suggestions":"87"},{"ruleId":"79","severity":1,"message":"88","line":2,"column":8,"nodeType":"81","messageId":"82","endLine":2,"endColumn":14},{"ruleId":"79","severity":1,"message":"89","line":6,"column":8,"nodeType":"81","messageId":"82","endLine":6,"endColumn":14},{"ruleId":"79","severity":1,"message":"90","line":7,"column":8,"nodeType":"81","messageId":"82","endLine":7,"endColumn":14},{"ruleId":"91","severity":1,"message":"92","line":41,"column":33,"nodeType":"93","endLine":41,"endColumn":65},{"ruleId":"91","severity":1,"message":"92","line":46,"column":33,"nodeType":"93","endLine":46,"endColumn":65},{"ruleId":"91","severity":1,"message":"92","line":50,"column":33,"nodeType":"93","endLine":50,"endColumn":65},{"ruleId":"91","severity":1,"message":"92","line":58,"column":9,"nodeType":"93","endLine":58,"endColumn":79},{"ruleId":"94","severity":1,"message":"95","line":7,"column":9,"nodeType":"93","endLine":7,"endColumn":29},{"ruleId":"79","severity":1,"message":"96","line":42,"column":13,"nodeType":"81","messageId":"82","endLine":42,"endColumn":30},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'index' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'delta' and 'tick'. Either include them or remove the dependency array.","ArrayExpression",["97"],"'meter2' is defined but never used.","'arrow1' is defined but never used.","'arrow2' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'adminEmailDetails' is assigned a value but never used.",{"desc":"98","fix":"99"},"Update the dependencies array to be: [delta, text, tick]",{"range":"100","text":"101"},[793,799],"[delta, text, tick]"]